1
import re

with open("row.txt", "r") as file:
    text = file.read()

pattern = r'ab*'
matches = re.findall(pattern, text)
print(matches)


2
import re

with open("row.txt", "r") as file:
    text = file.read()

pattern = r'ab{2,3}'
matches = re.findall(pattern, text)
print(matches)


3
import re

with open("row.txt", "r") as file:
    text = file.read()

pattern = r'[a-z]+_[a-z]+'
matches = re.findall(pattern, text)
print(matches)


4
import re

with open("row.txt", "r") as file:
    text = file.read()

pattern = r'[A-Z][a-z]+'
matches = re.findall(pattern, text)
print(matches)


5
import re

with open("row.txt", "r") as file:
    text = file.read()

pattern = r'a.*b'
matches = re.findall(pattern, text)
print(matches)

6
import re

with open("row.txt", "r") as file:
    text = file.read()

result = re.sub(r'[ ,.]', ':', text)
print(result)


7
import re

with open("row.txt", "r") as file:
    text = file.read()

def snake_to_camel(text):
    words = text.split('_')
    return ''.join(word.capitalize() for word in words)

camel_case = snake_to_camel(text)
print(camel_case)


8
import re

with open("row.txt", "r") as file:
    text = file.read()
    
pattern = r'[A-Z][a-z]*'
matches = re.findall(pattern, text)
print(matches)


9
import re

with open("row.txt", "r") as file:
    text = file.read()
    
pattern = r'([a-z])([A-Z])'
result = re.sub(pattern, r'\1 \2', text)
print(result)


10
import re

with open("row.txt", "r") as file:
    text = file.read()
    
def camel_to_snake(text):
    result = re.sub('([a-z0-9])([A-Z])', r'\1_\2', text)
    return result.lower()

snake_case = camel_to_snake(text)
print(snake_case)